#!/bin/sh

declare -a used=(
"🐻github"
"🐒kaggle"
"📜notion"
"📪ntu-mail"
"🎬ntu-cool"
"🦥ntu-wifi"
)


# pipe the dmenu
Choice=$(printf '%s\n' "🔎search" "🔧toolBar" "📒readingList" "🃏ntuBookMark" "🐍pythonResources" "🫐juliaResources" "📉econData" "🌎webDevelopment" "${used[@]}" | rofi -dmenu -p "BookMark 📡:")

# create the function to get the bookmark
get_BookMark() {
    db=$1
    echo "$db"
    readarray -t dbList < $db  # create the array
    # split the name and the link
    name=$(printf '%s\n' "${dbList[@]}" | awk '{print $1}')
    url=$(printf '%s\n' "${dbList[@]}" | awk '{print $2}')
    declare -a name=($name)
    declare -a url=($url)
    choice=$(printf '%s\n' "${name[@]}" | rofi -dmenu -p "BookMark📡:")
    n=${#name[*]}  # nmber of the element
    for ((i=0; i<$n; i++)); do
        if [ "${name[$i]}" == "$choice" ]; then
            index=$i
            break
        fi
    done
    mode=$(echo -e "🌗tab\n🌕window" | rofi -dmenu -p "choose the mode🌛 ")
    if [ $mode == "🌕window" ]; then
        $BROWSER "-new-window" "${url[$index]}"
    else
        $BROWSER "-new-tab" "${url[$index]}"
    fi
}

# reading-list or bookmar
if [ "$Choice" == "🔎search" ]; then
    pick=$(echo -e "d: duckduckgo\ngh: github\nyt: youtube\ndic: cambridge dictionary\naw: arch wiki\npac: pacman\naur: AUR\nwk: wiki" | rofi -dmenu -p "search 🔎:")

    IFS=\  read -ra arr <<< $pick
    engine=${arr[0]}
    word=""
    for w in ${arr[@]}; do
        [ $w != $engine ] && word+=" $w"
    done

    mode=$(echo -e "🌗tab\n🌕window" | rofi -dmenu -p "choose the mode🌛 ")
    case $engine in
        "d")
            if [ $mode == "🌕window" ]; then
                $BROWSER "-new-window" "https://start.duckduckgo.com/?q=$word"
            else
                $BROWSER "-new-tab" "https://start.duckduckgo.com/?q=$word"
            fi ;;
        "gh")
            if [ $mode == "🌕window" ]; then
                $BROWSER "-new-window" "https://github.com/search?q=$word"
            else
                $BROWSER "-new-tab" "https://github.com/search?q=$word"
            fi ;;
        "yt")
            if [ $mode == "🌕window" ]; then
                $BROWSER "-new-window" "https://www.youtube.com/results?search_query=$word"
            else
                $BROWSER "-new-tab" "https://www.youtube.com/results?search_query=$word"
            fi ;;
        "dic")
            if [ $mode == "🌕window" ]; then
                $BROWSER "-new-window" "https://dictionary.cambridge.org/dictionary/english/$word"
            else
                $BROWSER "-new-tab" "https://dictionary.cambridge.org/dictionary/english/$word"
            fi ;;
        "aw")
            if [ $mode == "🌕window" ]; then
                $BROWSER "-new-window" "https://wiki.archlinux.org/index.php?search=$word"
            else
                $BROWSER "-new-tab" "https://wiki.archlinux.org/index.php?search=$word"
            fi ;;
        "pac")
            if [ $mode == "🌕window" ]; then
                $BROWSER "-new-window" "https://archlinux.org/packages/?sort=&q=$word&maintainer=&flagged="
            else
                $BROWSER "-new-tab" "https://archlinux.org/packages/?sort=&q=$word&maintainer=&flagged="
            fi ;;
        "aur")
            if [ $mode == "🌕window" ]; then
                $BROWSER "-new-window" "https://aur.archlinux.org/packages?O=0&K=$word"
            else
                $BROWSER "-new-tab" "https://aur.archlinux.org/packages?O=0&K=$word"
            fi ;;
        "wk")
            if [ $mode == "🌕window" ]; then
                $BROWSER "-new-window" "https://en.wikipedia.org/wiki/$word"
            else
                $BROWSER "-new-tab" "https://en.wikipedia.org/wiki/$word"
            fi ;;
    esac
elif [ "$Choice" == "🐻github" ]; then
    $BROWSER "-new-tab" "https://github.com/opottghjk00?tab=repositories"
elif [ "$Choice" == "🐒kaggle" ]; then
    $BROWSER "-new-tab" "https://www.kaggle.com/"
elif [ "$Choice" == "📜notion" ]; then
    $BROWSER "-new-tab" "https://www.notion.so/summer-study-plan-070c5d09b7a6416683be80727a4e8b26"
elif [ "$Choice" == "📪ntu-mail" ]; then
    $BROWSER "-new-tab" "https://mail.ntu.edu.tw/owa/auth/logon.aspx?url=https%3A%2F%2Fmail.ntu.edu.tw%2Fowa%2F&reason=0"
elif [ "$Choice" == "🎬ntu-cool" ]; then
    $BROWSER "-new-tab" "https://cool.ntu.edu.tw/login/portal"
elif [ "$Choice" == "🦥ntu-wifi" ]; then
    $BROWSER "-new-tab" "https://www.ntu.edu.tw"
elif [ "$Choice" == "🔧toolBar" ]; then
    get_BookMark "$HOME/.local/share/BookMark/toolBar"
elif [ "$Choice" == "📒readingList" ]; then
    get_BookMark "$HOME/.local/share/BookMark/readingList"
elif [ "$Choice" == "🃏ntuBookMark" ]; then
    file=$(echo -e "📘juniroFirst\n🔖juniroSecond\n📚seniorFirst" | rofi -dmenu -p "BookMark 📡:")
    file=${file: 1}
    get_BookMark "$HOME/.local/share/BookMark/ntuBookMark/$file"
elif [ "$Choice" == "🐍pythonResources" ]; then
    get_BookMark "$HOME/.local/share/BookMark/python"
elif [ "$Choice" == "🫐juliaResources" ]; then
    get_BookMark "$HOME/.local/share/BookMark/julia"
elif [ "$Choice" == "📉econData" ]; then
    get_BookMark "$HOME/.local/share/BookMark/econData"
elif [ "$Choice" == "🌎webDevelopment" ]; then
    get_BookMark "$HOME/.local/share/BookMark/webDevelopment"
fi
